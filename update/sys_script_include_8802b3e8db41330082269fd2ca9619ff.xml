<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_293397_web_cli.ConfigureCLI</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>ConfigureCLI</name>
        <script><![CDATA[var ConfigureCLI = Class.create();
ConfigureCLI.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	getProfileList : function() {
		var returnValue = [];
		var gr = new GlideRecord("x_293397_web_cli_profiles");
		gr.query();
		while (gr.next()) {
			returnValue.push({
				label : gr.getValue('label'),
				sysid : gr.getValue('sys_id')
			});
		}
		gs.info(JSON.stringify(returnValue));
		return JSON.stringify(returnValue);
	},
	getDefaultProfile : function() {
		var returnValue = "";
		
		var userUniqueId = this.getParameter('sysparm_cli_user_sys_id');
		
		var gr = new GlideRecord("sys_user_preference");
		gr.addQuery("name", "default_user_terminal_profile");
		gr.addQuery('user',userUniqueId);
		gr.query();
		if (gr.next()) {
			var profileId = gr.getValue('value');
			if (profileId.length > 0) {
				returnValue = profileId;
			}
			else {
				returnValue = gs.getProperty('x_293397_web_cli.default_terminal_profile');
			}
		}
		else {
			returnValue = gs.getProperty('x_293397_web_cli.default_terminal_profile');
		}
		return returnValue;
	},
	getDefaultUserProfile : function() {
		var returnValue = "";
		var gr = new GlideRecord("sys_user_preference");
		gr.addQuery("name", "default_user_terminal_profile");
		gr.addQuery('user',gs.getUserID());
		gr.query();
		if (gr.next()) {
			returnValue = gr.getValue('value');
		}
		return returnValue;
	},
	setDefaultUserProfile : function() {
		var returnValue = "";
		
		var profileUniqueId = this.getParameter('sysparm_cli_profile_sys_id');
		profileUniqueId = (profileUniqueId == 'NONE') ? '' : profileUniqueId;
		
		var currentUserId = gs.getUserID();
		var currentUserName = gs.getUserName();
		
		var gr = new GlideRecord("sys_user_preference");
		gr.addQuery("name", "default_user_terminal_profile");
		gr.addQuery('user',currentUserId);
		gr.query();
		if (gr.next()) {
			gr.setValue('value',profileUniqueId);
			returnValue = gr.update();
		}
		else {
			gr.initialize();
			gr.setValue("name", "default_user_terminal_profile");
			gr.setValue('user',currentUserId);
			gr.setValue('value',profileUniqueId);
			gr.setValue('type','string');
			gr.setValue('description','Default WebCLI profile for ' + currentUserName);
			returnValue = gr.insert();
		}
		return returnValue;
	},
	loadProfile : function() {
		var profileUniqueId = this.getParameter('sysparm_cli_profile_sys_id');
		
		var commandList = [];
		var taskList = [];
		var scriptList = [];
		
		var scriptProfileGr = new GlideRecord("x_293397_web_cli_m2m_command_scripts_profiles");
		scriptProfileGr.addQuery("profiles",profileUniqueId);
		scriptProfileGr.query();
		while (scriptProfileGr.next()) {
			var scriptGr = new GlideRecord("x_293397_web_cli_command_scripts");
			scriptGr.addQuery("active",true);
			scriptGr.addQuery("sys_id", scriptProfileGr.getValue('command_scripts'));
			scriptGr.query();
			while (scriptGr.next()) {
				var scriptName = scriptGr.getValue('name');
				var scriptDescr = scriptGr.getValue('description');
				var scriptLineAr = scriptGr.getValue('script').split('\n');
				
				scriptList.push({
					name : scriptName,
					description : scriptDescr,
					commands : scriptLineAr
				});
			}
		}
		
		
		var profileGr = new GlideRecord("x_293397_web_cli_m2m_profiles_code_entries");
		profileGr.addQuery("profiles",profileUniqueId);
		profileGr.query();
		while (profileGr.next()) {
			var codeGr = new GlideRecord("x_293397_web_cli_code_entries");
			codeGr.addQuery("active", true);
			codeGr.addQuery("sys_id",profileGr.getValue('code_entries'));
			codeGr.query();
			if (codeGr.next()) {
				commandList.push({
					name:codeGr.getValue('name'),
					script:codeGr.getValue('script'),
					description:codeGr.getValue('description'),
					usage:codeGr.getValue('usage')
				});
			}
		}
		
		var returnValue = {
			success : (commandList.length > 0 || taskList.length > 0) ? true : false,
			commands : commandList,
			scripts : scriptList
		};
		
		return JSON.stringify(returnValue);
	},
	type: 'ConfigureCLI'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-04-23 15:06:21</sys_created_on>
        <sys_id>8802b3e8db41330082269fd2ca9619ff</sys_id>
        <sys_mod_count>50</sys_mod_count>
        <sys_name>ConfigureCLI</sys_name>
        <sys_package display_value="Web CLI" source="x_293397_web_cli">88edd7a8db01330082269fd2ca9619c5</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Web CLI">88edd7a8db01330082269fd2ca9619c5</sys_scope>
        <sys_update_name>sys_script_include_8802b3e8db41330082269fd2ca9619ff</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-05-07 20:55:05</sys_updated_on>
    </sys_script_include>
</record_update>
