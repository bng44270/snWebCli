<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_293397_web_cli.WebCLIServer</api_name>
        <client_callable>true</client_callable>
        <description/>
        <name>WebCLIServer</name>
        <script><![CDATA[var WebCLIServer = Class.create();
WebCLIServer.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	runSelectQuery : function() {
		var table = this.getParameter('sysparm_cli_select_table');
		var fields = this.getParameter('sysparm_cli_select_fields');
		var filter = this.getParameter('sysparm_cli_select_filter');
		var recordCount = this.getParameter('sysparm_cli_select_records');
		
		var returnValue = [];
		
		var gr = new GlideRecord(table);
		if (filter.length > 0)
			gr.addEncodedQuery(filter);
		if (recordCount > 0)
			gr.setLimit(parseInt(recordCount));
		gr.query();
		while (gr.next()) {
			returnValue.push(fields.split(',').map(function(thisItm) {
				return gr.getValue(thisItm);
			}));
		}
		return JSON.stringify(returnValue);
	},
	getTableSchema  : function() {
		var returnValue = {
			tableMap : "",
			tables : []
		};
		var tableName = this.getParameter('sysparm_cli_table_name');
		
		var tableDepends = new GlideTableHierarchy(tableName);
		
		var tableAr = tableDepends.getTables();
		
		returnValue.tableMap = tableAr.join(" --> ");
		
		for (var i = 0; i < tableAr.length; i++) {
			returnValue.tables.push({
				name:tableAr[i],
				fields : this.getTableFields(tableAr[i]).sort(function(a,b) {
					return a.element - b.element;
				})
			});
		}
		
		gs.info(JSON.stringify(returnValue));
		return JSON.stringify(returnValue);
	},
	getTableFields : function(tableName) {
		var fieldList = [];
		var gr = new GlideRecord("sys_dictionary");
		gr.addEncodedQuery('name=' + tableName + '^element!=NULL');
		gr.query();
		while (gr.next()) {
			fieldList.push({
				'element':gr.getValue('element'),
				'type':gr.getValue('internal_type'),
				'sys_id':gr.getUniqueValue()
			});
		}
		return fieldList;
	},
	
	getFieldAcl : function() {
		var returnValue = [];
		
		var tableName = this.getParameter('sysparm_cli_table_name');
		var fieldName = this.getParameter('sysparm_cli_field_name');
		
		var hasField = false;
		
		var aclName = tableName + '.' + fieldName;
		
		var gr = new GlideRecord("sys_security_acl");
		
		if (fieldName.length > 0) {
			gr.addQuery("name", aclName);
			hasField = true;
		}
		else {
			gr.addEncodedQuery('nameSTARTSWITH' + tableName);
		}
		
		gr.query();
		while (gr.next()) {
			returnValue.push({
				acl : gr.getValue('name'),
				type : gr.getValue('type'),
				operation : gr.getValue('operation'),
				roles : this.getRolesForAcl(gr.getUniqueValue())
			});
		}
		
		return JSON.stringify(returnValue);
	},
	getRolesForAcl : function(uniqueId) {
		var returnValue = [];
		var gr = new GlideRecord("sys_security_acl_role");
		gr.addQuery("sys_security_acl", uniqueId);
		gr.query();
		while (gr.next()) {
			returnValue.push(this.getRoleNameBySydId(gr.getValue('sys_user_role')));
		}
		gs.info(JSON.stringify(returnValue));
		return returnValue;
	},
	getRoleNameBySydId : function (uniqueId) {
		returnValue = "";
		var gr = new GlideRecord("sys_user_role");
		gr.addQuery("sys_id",uniqueId);
		gr.query();
		if (gr.next()) {
			returnValue = gr.getValue('name');
		}
		gs.info(returnValue);
		return returnValue;
	},
	getRelatedObjects : function () {
		var returnData = [];
		
		var objType = this.getParameter('sysparm_obj_type');
		var objTable = this.getParameter('sysparm_obj_table');
		
		var gr = null;
		
		if (objType == 'sys_script') {
			gr = new GlideRecord(objType);
			gr.addQuery("collection",objTable);
			gr.query();
			while (gr.next()) {
				returnData.push({'name':gr.getValue('name'),'sys_id':gr.getUniqueValue()});
			}
		}
		else if (objType == 'sys_script_client') {
			gr = new GlideRecord(objType);
			gr.addQuery("table",objTable);
			gr.query();
			while (gr.next()) {
				returnData.push({'name':gr.getValue('name'),'sys_id':gr.getUniqueValue()});
			}
		}
		else if (objType == 'sys_ui_action') {
			gr = new GlideRecord(objType);
			gr.addQuery("table",objTable);
			gr.query();
			while (gr.next()) {
				returnData.push({'name':gr.getValue('name'),'sys_id':gr.getUniqueValue()});
			}
		}
		else if (objType == 'sys_ui_policy') {
			gr = new GlideRecord(objType);
			gr.addQuery("table",objTable);
			gr.query();
			while (gr.next()) {
				returnData.push({'name':gr.getValue('short_description'),'sys_id':gr.getUniqueValue()});
			}
		}
		else if (objType == 'sys_data_policy2') {
			gr = new GlideRecord(objType);
			gr.addQuery("model_table",objTable);
			gr.query();
			while (gr.next()) {
				returnData.push({'name':gr.getValue('short_description'),'sys_id':gr.getUniqueValue()});
			}
		}
		else if (objType == 'sysevent_email_action') {
			gr = new GlideRecord(objType);
			gr.addQuery("collection",objTable);
			gr.query();
			while (gr.next()) {
				returnData.push({'name':gr.getValue('name'),'sys_id':gr.getUniqueValue()});
			}
		}
		else if (objType == 'sys_dictionary') {
			returnData =  this.getTableFields(objTable).map(function(thisField) {
				return {'name':thisField.element + "(" + thisField.type + ")", 'sys_id':thisField.sys_id};
			});
		}
		else if (objType == 'sys_dictionary_override') {
			gr = new GlideRecord(objType);
			gr.addQuery("name",objTable);
			gr.query();
			while (gr.next()) {
				returnData.push({'name':gr.getValue('element'),'sys_id':gr.getUniqueValue()});
			}
		}
		else if (objType == 'sys_security_acl') {
			gr = new GlideRecord(objType);
			gr.addEncodedQuery('nameSTARTSWITH' + objTable);
			gr.query();
			while (gr.next()) {
				returnData.push({'name':gr.getValue('name') + " for " + gr.getValue('operation') + " on " + gr.getValue('type') + "with roles (" + this.getRolesForAcl(gr.getUniqueValue()).join(" ") + ")",'sys_id':gr.getUniqueValue()});
			}
		}
		else if (objType == 'sys_ui_style') {
			gr = new GlideRecord(objType);
			gr.addQuery("name",objTable);
			gr.query();
			while (gr.next()) {
				returnData.push({'name':gr.getValue('element'),'sys_id':gr.getUniqueValue()});
			}
		}
		else if (objType == 'sysrule_view') {
			gr = new GlideRecord(objType);
			gr.addQuery("table",objTable);
			gr.query();
			while (gr.next()) {
				returnData.push({'name':gr.getValue('name'),'sys_id':gr.getUniqueValue()});
			}
		}
		else if(objType == 'hierarchy') {
			var tableDepends = new GlideTableHierarchy(objTable);
			
			returnData = tableDepends.getTables();
		}
		else if (objType == 'sys_db_object') {
			gr = new GlideRecord(objType);
			gr.addQuery("name",objTable);
			gr.query();
			while (gr.next()) {
				returnData.push({'name':gr.getValue('label') + ' (' + gr.getValue('name') + ')','sys_id':gr.getUniqueValue()});
			}
		}
		return JSON.stringify(returnData);
	},
	type: 'WebCLIServer'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-04-24 20:43:02</sys_created_on>
        <sys_id>344a824ddb05330082269fd2ca961918</sys_id>
        <sys_mod_count>103</sys_mod_count>
        <sys_name>WebCLIServer</sys_name>
        <sys_package display_value="Web CLI" source="x_293397_web_cli">88edd7a8db01330082269fd2ca9619c5</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Web CLI">88edd7a8db01330082269fd2ca9619c5</sys_scope>
        <sys_update_name>sys_script_include_344a824ddb05330082269fd2ca961918</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-05-06 16:26:06</sys_updated_on>
    </sys_script_include>
</record_update>
